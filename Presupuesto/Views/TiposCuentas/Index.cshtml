@model IEnumerable<TipoCuenta>

@{
        ViewData["Title"] = "Listado Tipos Cuentas";
}


<h1>Tipos de Cuentas</h1>
<h5>El tipo de cuenta se refiere a cómo podemos agrupar cuentas. Ejemplos: Préstamos, tarjetas de créditos, etc.</h5>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear Registro</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>

        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var tipoCuenta in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@tipoCuenta.id" class="ids" />
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id = "@tipoCuenta.id" >Editar</a>
                    <a class="btn btn-danger" asp-action="Eliminar" asp-route-id = "@tipoCuenta.id" >Eliminar</a>
                </td>
                <td>
                    @tipoCuenta.Nombre
                </td>
            </tr>
        }
    </tbody>

</table>

@section Scripts {
    <script>
       
       
        const urlOrdenar = '@Url.Action("Ordenar")'
        $(function() {
            $("#reordenable").sortable({
                stop: async function(e, ui) {
                    await actualizarOrdenes();
                }
            });

            async function actualizarOrdenes() {
                const ids = obtenerIds();
                await ennviarIds(ids);
            }
            function obtenerIds() {
                const ids = $(".ids").map(function() {
                    return $(this).val()
                }).get();

                return ids
            }

            async function ennviarIds(ids) {
                var data = JSON.stringify(ids);

                await fetch(urlOrdenar, {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

            }

        })
    </script>
}